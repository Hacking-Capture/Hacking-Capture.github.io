---
layout: post
title: Git
date: 2021-10-04
description: Youâ€™ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: git/git.jpeg  # Add image post (optional)
tags: [] # add tag
---
<p align="center">
<img src="/assets/img/git/git.jpeg" width="350"/>
</p>
 

Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows.

#### Installation in Ubuntu

Before the Git installation,update the system.

   > sudo apt update -y

After completing the updating process,install the Git
 
   > sudo apt-get install git
 

### Commands and Operations 

Check the version of git 
  > git --version
  
<img src="/assets/img/git/git_version.png" style="margin-left:2%;" width="449"/>

Firstly, setting up Git 
 >  git config --global user.name "safwan"
 >  
 >  git config --global user.email "safwanpaloli6@gmail.com"
 
 
 Initialization Git 
 
 git init creates an empty Git repository or re-initializes an existing one. In essence, it creates a .git directory with subdirectories and template files. Running a git init in an existing repository will not overwrite things that are already there. Instead, it picks up the newly added templates.

> git init

<img src="/assets/img/git/git _init.png " style="margin-left:2%;" width="449" />

 Create a file, file name is 1.txt 
 > touch  1.txt 

Add content to 1.txt using nano editor.

<img src="/assets/img/git/add_values.png" style="margin-left:2%;" width="449" />

Check the Git status
> git status 

The files are untracked, so add them to git and commit

Files can differently add to git

> git add 1.txt
> 
> Add all files.
> 
> git add -A  
> 
> git add . 
>  
> git add --all


After the file add and commit a message.

> git commit -m "message type here"

<img src="/assets/img/git/git_add_and_commit.png" style="margin-left:2%;" width="449" />

Check the log 

> git log 

<img src="/assets/img/git/git_log.png" style="margin-left:2%;" width="449" />

Add more content on 1.txt file, and add file to git and again to commit file 

> git log --all

<img src="/assets/img/git/git-log-all.jpg" style="margin-left:2%;" width="449" />

Here see that Commit IDs are unique SHA-1 hashes that are created whenever a new commit is recorded. If you want to push changes to such a repository, you can use the workspace command line to manually commit and push to a new branch.

Create a new branch 
  
> #### Created two branches, One is that feature and design.
> 
> git branch feature
> 
> git branch design

List the git branches

> git branch 

<img src="/assets/img/git/git_branch.png" style="margin-left:2%;" width="449" />

See that now branch is pointed to master. Master branch is default branch in git.

Now change to feature branch.

> git checkout feature

<img src="/assets/img/git/git_feature_branch.png" style="margin-left:2%;" width="449" />

Again Add some text to 1.txt 

Check the different between before commit and after commit.
 
> git diff

<img src="/assets/img/git/git_diff.png" style="margin-left:2%;" width="449" />

The last commit may need to be removed.

> git stash

<img src="/assets/img/git/git_stash.png" style="margin-left:2%;" width="449" />

To Delete a local branch.

> git branch -d design 

<img src="/assets/img/git/git_delete.png" style="margin-left:2%;" width="449" />

#### Create a Repository in Github

<img src="/assets/img/git/git_create_repo.png" style="margin-left:2%;" width="449" />
<img src="/assets/img/git/github_create1.png" style="margin-left:2%;" width="449" />

##### Push a branch to Github 

> git remote add new_repo https://github.com/safwanpaloli/new_repo.git 

> git push new_repo master 

<img src="/assets/img/git/git_error.png" style="margin-left:2%;" width="449" />

coudn't upload file with github password, we have to create a personal access token 


#### Create a Personal Access Token  
 
github -> Settings-> Developer Settings -> personal access token 

<img src="/assets/img/git/ezgif.com-gif-maker(1).gif" style="margin-left:2%;" width="700" />

Give your token a name and Tick on repo. 

<img src="/assets/img/git/git_create_token.png" style="margin-left:2%;" width="449" />

click generate token.

copy the token 

<img src="/assets/img/git/git_copy_token.png" style="margin-left:2%;" width="449" />

At last, Push branch to github 

> git push new_repo master.
   in password is token value paste their.
   
   <img src="/assets/img/git/git_new_push1.png" style="margin-left:2%;" width="449" />

